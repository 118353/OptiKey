NEXT STEPS:

Add diactritic keyboard. I guess this would be alphabet specific (e.g. latin alphabet)
http://unicodelookup.com/

A ĂĄÃÄÅÆĀÀÁÂ (10)
a ăąãäåæāàáâ
C ČÇĆ (3)
c čçć
D ĐÐĎ (3)
d đðď
E ƏĘĚÊËĒĖÈÉ (9)
e əęěêëēėèé
G ĜĞĢ (3)
g ĝğģ
H ĦĤ (2)
h ħĥ				 = 30 (AtoH)
I ỊĮĪÏÎÍÌ (7)
i ịįīïîíì
K Ķ (1)
k ķ
L ŁĽĻĹ (4)
l łľļĺ
N ŇŅŃÑ (4)
n ňņńñ
O ƠŒŐŌØÖÕÔÓÒ (10)
o ơœőōøöõôóò
R ŔŘ (2)
r ŕř				 = 28 (ItoR)
S ŞŠȘßŚŜ (6)
s şšșßśŝ
T ŤȚŢÞ (4)
t ťțţþ
U ỤƯŲŰŮŪÜÛÚÙ (10)
u ụưųűůūüûúù
W Ŵ (1)
w ŵ
Y ŶŸÝ (3)
y ŷÿý
Z ŹŻŽ (3)
z źżž				 = 27 (UtoZ)





More keyboard
	+ Buttons for Publish & Diacritic keyboards
	+ Settings button
	+ Rest button
Add settings
	+ normal settings (hotkey window)
	+ accessible settings - keyboard style
Dictionary management window
	+ Add
	+ Remove
Add high contrast theme

Profile and optimise (and refactor any remaining large classes, e.g. MainViewModel)

--------------------------------------------------------------------------------

TO DO?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Instantiate services AFTER View has loaded - this gives us the chance to display a notification message if services error during initialisation (e.g. InputService can publish an Error event if the TET service is not running, but this will not be displayed. It also prevents clean shutdown.)
Character codes – ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word

--------------------------------------------------------------------------------

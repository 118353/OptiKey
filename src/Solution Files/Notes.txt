NEXT STEPS:

Bootstrap services AFTER View has loaded - this gives us the chance to display a notification message if services error during initialisation (e.g. InputService can publish an Error event if the TET service is not running, but this will not be displayed. It also prevents clean shutdown.)
	TEST

OutputService changes:
	Pass everything (function keys) to output service. It should make a decision if the key is useful, i.e.
	It cannot be one of the keys which can be pressed/locked as there is seperate logic to monitor and react to that
	It must be explicitly expected, i.e. BackOne, BackMany, SwapSuggestion, ClearOutput
	OR be convertible to a VirtualKeyCode

	Remove OutputService.PublishModifiedVirtualKeyCodeSet - modifiers are not going to be applied like this anymore. Instead modifiers will be published automatically as they are pressed.
		Change PublishService methods - publish VirtualKeyCode, or string
		Remove multiple command keys; SelectAll, Copy, Cut, Paste
		Refactor to remove VirtualKeyCodeSet

	Change OutputService interface: Output(FunctionKey/String)
	OutputService should monitor KeyDownStates and publish key down/up when states change to On/Off
	Rename ReleaseUnlockedModifiers to ReleaseUnlockedKeys
	ReleaseUnlockedModifiers(); every time Output is called as a key was pressed.
		Modifiers (Shift,Ctrl,Alt,Win) should no longer ReleaseUnlockedKeys as they are not passed to OutputService directly.
	Sync key down state:
		Publish to ON = release all potentially held keys (check state for every virtualkeycode and release if down)
						+ publish key down for any keys with on/lock state
		Publish to OFF/Shutdown if publish is ON = release all potentially held keys (check state for every virtualkeycode and release if down)
		
Add settings
	Icon: http://thenounproject.com/term/repair/81170/ Norbert Kucsera of Noun project
	+ accessible settings - keyboard style
		* include ability to move and resize keyboard
	? normal settings (hotkey window)
	
Look & feel:		
Theme	System.String	/Resources/Themes/Android_Dark.xaml
FontFamily	System.String	/Resources/Fonts/#Roboto
FontStretch	System.String	Condensed
FontWeight	System.String	Regular
ScratchpadNumberOfLines	System.Int32	2
ToastNotificationTitleFontSize	System.Int32	25
ToastNotificationContentFontSize	System.Int32	16
ToastNotificationCharactersPerLine	System.Int32	50
ToastNotificationSecondsPerLine	System.Int32	2
ToastNotificationAdditionalSeconds	System.Int32	2
		
Position:		
MainWindowTop	System.Double	0
MainWindowLeft	System.Double	0
MainWindowHeight	System.Double	400
MainWindowWidth	System.Double	800
MainWindowState	System.Windows.WindowState	Normal
		
Words:		
Language	JuliusSweetland.ETTA.Enums.Languages	BritishEnglish
AutoAddSpace	System.Boolean	TRUE
AutoCapitalise	System.Boolean	TRUE
MultiKeySelectionMaxDictionaryMatches	System.Int32	40
		
Sounds:		
SpeechVoice	System.String	
SpeechVolume	System.Int32	100
SpeechRate	System.Int32	0
InfoSoundFile	System.String	Resources\Sounds\Info1.wav
SelectionSoundFile	System.String	Resources\Sounds\Selection1.wav
ErrorSoundFile	System.String	Resources\Sounds\Error1.wav
MultiKeySelectionCaptureStartSoundFile	System.String	Resources\Sounds\MultiKeyCaptureStart1.wav
MultiKeySelectionCaptureEndSoundFile	System.String	Resources\Sounds\MultiKeyCaptureEnd1.wav
		
Pointing & Selection:		
PointsSource	JuliusSweetland.ETTA.Enums.PointsSources	MousePosition
PointsMousePositionSampleInterval	System.TimeSpan	00:00.013
PointTtl	System.TimeSpan	00:00.150
KeySelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	KeyboardKeyDownsUps
PointSelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	Fixations
SelectionTriggerKeyboardKeyDownUpKey	System.Windows.Forms.Keys	Pause
SelectionTriggerMouseDownUpButton	System.Windows.Forms.MouseButtons	Left
KeySelectionTriggerFixationMinPoints	System.Int32	10
PointSelectionTriggerFixationMinPoints	System.Int32	10
PointSelectionTriggerFixationRadius	System.Double	50
KeySelectionTriggerFixationTime	System.TimeSpan	00:01.500
PointSelectionTriggerFixationTime	System.TimeSpan	00:01.500
SelectionTriggerStopSignal	JuliusSweetland.ETTA.Enums.TriggerStopSignals	NextLow
MultiKeySelectionFixationMinDwellTime	System.TimeSpan	00:00.050
MultiKeySelectionMaxDuration	System.TimeSpan	01:00.000
		
Other:		
Debug	System.Boolean	TRUE


Recalibrate
	Icon: http://thenounproject.com/term/settings/56313/ Arthur Shlain of Noun project
	
Dictionary management window
	+ Add
	+ Remove
	
Add high contrast theme

Profile and optimise, especially keyboard transitions

Refactor any remaining large classes, e.g. MainViewModel

Package ETTA to install to Program Files directory (required to stay on top)
	Stay on top of everything (including Metro start menu): http://stackoverflow.com/questions/14629406/how-can-i-make-my-own-application-on-top-in-the-start-menu

Change equality comparisons for floating point types (float, double) back to near-equality (subtract them, Abs the result and check if < tolerance). Some arithmatic may work in Debug where the JIT compiler cannot use the full float range, but fail in Release.

--------------------------------------------------------------------------------

TO DO?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes – ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word

--------------------------------------------------------------------------------

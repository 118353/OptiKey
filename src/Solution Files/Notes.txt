X Move Activation out of TET point source ctor - do it when first event listener attaches.
	TEST TET POINT SOURCE, INCLUDING THROWING ERRORS

Why is windows 8.1 reporting itself as 6.2 (Windows 8) rather than 6.3.
	Ok when exe run directly, but not when run using visual studio debugging.

Should I be defining the settings (and VM properties) as FontWeights or FontWeight?

Management (new window accessed with hotkey)
		X Visuals:		
		X Theme	System.String	/Resources/Themes/Android_Dark.xaml
		X FontFamily	System.String	/Resources/Fonts/#Roboto
		X FontStretch	System.String	Condensed
		X FontWeight	System.String	Regular
		X ScratchpadNumberOfLines	System.Int32	2
		X ToastNotificationTitleFontSize	System.Int32	25
		X ToastNotificationContentFontSize	System.Int32	16
		X VisualMode setting - SpeechOnly / Standard
		
		X Words:		
		X Language	JuliusSweetland.ETTA.Enums.Languages	BritishEnglish
			http://stackoverflow.com/questions/6145888/how-to-bind-an-enum-to-a-combobox-control-in-wpf
			
		X AutoAddSpace	System.Boolean	TRUE
		X AutoCapitalise	System.Boolean	TRUE
		X MultiKeySelectionMaxDictionaryMatches	System.Int32	40
		
		X Sounds:		
		X SpeechVoice	System.String	
		X SpeechVolume	System.Int32	100
		X SpeechRate	System.Int32	0
		X InfoSoundFile	System.String	Resources\Sounds\Info1.wav
		X SelectionSoundFile	System.String	Resources\Sounds\Selection1.wav
		X ErrorSoundFile	System.String	Resources\Sounds\Error1.wav
		X MultiKeySelectionCaptureStartSoundFile	System.String	Resources\Sounds\MultiKeyCaptureStart1.wav
		X MultiKeySelectionCaptureEndSoundFile	System.String	Resources\Sounds\MultiKeyCaptureEnd1.wav
		
		X Pointing & Selecting:	
		X PointsSource	JuliusSweetland.ETTA.Enums.PointsSources	MousePosition
		X PointsMousePositionSampleInterval	System.TimeSpan	00:00.013
		X PointTtl	System.TimeSpan	00:00.150
		X KeySelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	KeyboardKeyDownsUps
		X PointSelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	Fixations
		X SelectionTriggerKeyboardKeyDownUpKey	System.Windows.Forms.Keys	Pause
		X SelectionTriggerMouseDownUpButton	System.Windows.Forms.MouseButtons	Left
		X PointSelectionTriggerFixationLockOnTime	System.TimeSpan	00:00.500
		X PointSelectionTriggerFixationCompleteTime	System.TimeSpan	00:01.500
		X PointSelectionTriggerFixationRadius	System.Double	50
		X KeySelectionTriggerFixationLockOnTime	System.TimeSpan	00:00.500
		X KeySelectionTriggerFixationCompleteTime	System.TimeSpan	00:01.500
		X MultiKeySelectionTriggerStopSignal	JuliusSweetland.ETTA.Enums.TriggerStopSignals	NextLow - RESET TO NEXTHIGH if using a trigger which doesn't support low signals, eg fixation triggers
		X MultiKeySelectionFixationMinDwellTime	System.TimeSpan	00:00.050
		X MultiKeySelectionMaxDuration	System.TimeSpan	01:00.000
		
		Dictionary management:
		Add
		Remove
			Do we need 2 remove entry methods? What's the point of not saving after removing?
			Entry+State class (AddRemovedStates enum and AddRemovedStates? State property = null, added, deleted)

		X Other:
		X Debug mode (setting)

	Application.Restart(); after changing some of the settings? Prompt user to restart (after saving) if certain settings have been changed.

X VisualMode setting - Standard / SpeechOnly
	- When switching mode make sure KeyDownStates (which should automatically change settings also?) are reset:
		X - Publishing off (which should release down keys automatically?)
		X - Multi-key selection off
		X - Set Keyboard back to Alpha
		X - Leave Sleep and Recalibrate in
	TEST SWITCHING MODES

Think about how to pause/prevent the point source during multi-key selection processing.
	Disabling all points prevents the Multi-key selection trigger storyboard from playing as the disabled datatrigger is taking precedence.
		CAN I MAKE THE ANIMATION TAKE CORRECT PRECEDENCE?
Pause point source when switching keyboards - on unload/load of content of Keyboard host, i.e. when KeyboardHost.Content changes
	Need to make sure KeyValueMap is nulled out when a keyboard changes, and only gets set again when the view is rendered fully?
	Do some testing around when the newContent.Loaded event fires, compared to when the Content is set, and the ContentRendered event fires. I think Loaded on the content is best, but still test.
		http://msdn.microsoft.com/en-us/library/ms748948.aspx#Window_Lifetime_Events
		http://msdn.microsoft.com/en-us/library/system.windows.frameworkelement.loaded(v=vs.110).aspx
	In GenerateContent - set PointToKeyValueMap = null; before changing the content.
	Optimise RebuildPointToKeyMap:
		a)If Content == null then PointToKeyValueMap = null
		b)Find Keys from Content, not from top layer. There won't be any and this is extra work.

Profile and optimise, especially keyboard transitions
	http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/28/new-cpu-usage-tool-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx
	http://blogs.msdn.com/b/visualstudio/archive/2014/06/12/new-memory-usage-tool-for-wpf-and-win32-applications.aspx
	
Refactor any remaining large classes, e.g. MainViewModel

!Release down keys logic seems to release keys which aren't down, e.g. F4 on shutdown!

Prevent minimising? Listen to state change and restore?

Publish as ClickOnce
	http://elbruno.com/2013/06/01/azure-howto-publish-a-clickonce-application-using-and-azure-website/

--------------------------------------------------------------------------------

TO DO?
Add transparency - accessible from keyboard? Just sent Window.Opacity?
Add support for USB (hardware) buttons (to act as triggers)?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes – ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word
Add high contrast theme
Test this product: http://www.cameramouse.org/
Get and test the Tobii EyeX: http://www.tobii.com/en/eye-experience/#.UwMlifl5OkF

No position input possible - automatically cycle through groups of keys, then keys in group: 
	Keyboards could define ordered set of KeyValues; the key "groups"
	New SelectionMode = KeyGroups - this then changes to PositionSource to a source which automatically loops through the current keyboard's groups.
	Position source can output more than one current point: CurrentKey would become a set (allowing the highlighting of a group of keys)
	Selection (of a set of KeyValues) when SelectionMode = KeyGroups does not produce a SelectionResult, but instead disables all keys not in the group (not explicitly, but instead based on a property, e.g. CurrentKeyGroup). SelectionMode then changes to Key.
	In Key mode the position source could iterate through all enabled keys in the key map (which should be the selected group of keys).
		Selection => normal key selection and reset mode back to KeyGroups.
		? If no selection in X iterations through the keys then output a special selection, e.g. a null selection (the trigger can watch the position source, like the fixation triggers.
	Each key group should contain a 'back' key to return from group selection?
	
Add support for T9 style selection; either individual keys, or multi key select?

Get a certificate (1), sign the release build (2) and package ETTA to install to Program Files directory (3) - required to be get UI Access and stay on top of Metro
	Free (1 year trial?) certificate for Open Source projects; https://www.certum.eu/certum/cert,offer_en_open_source_cs.xml
		http://stackoverflow.com/questions/1177552/code-signing-certificate-for-open-source-projects
	Steps to sign are in file "Certificates and Signing.txt"



!!! If DropBox creates another conflicted copy: http://stackoverflow.com/questions/12773488/git-fatal-reference-has-invalid-format-refs-heads-master

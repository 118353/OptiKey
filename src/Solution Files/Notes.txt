NEXT STEPS:

Rename Calibrate Service (interface and TET class) to CalibrationService

Change ICalibrationStateManager:
	Expose CalibrationService and extension method CanCalibrate (CalibrationService exists)
	Convert Calibrate method to async/await
		private TaskCompletionSource<bool> tcs = new TaskCompletionSource<bool>();
		tcs.SetResult(true); // complete task in event
		await tcs.Task; // wait for task somewhere else
	Add Window arg to Calibrate method (to set as parent)
	Add Interaction logic to MainVM/MainView
	Calibrate key press -> check state manager to see if we can calibrate -> If so raise calibration request with calibration service -> Interaction request logic calls Calibrate method and WAITS for it to return (using an await like this is just a way of blocking - could use signals)
		IF this causes deadlocks then consider this: http://blog.stephencleary.com/2012/07/dont-block-on-async-code.html
		a)Don't return to calling context when awaiting inside Calibrate method: await client.GetStringAsync(uri).ConfigureAwait(false);
		b)Make it async as far back as possible, e.g. https://github.com/xperiandri/PortablePrism/blob/master/Prism.StoreProfile.Interactivity/InteractionRequest/PopupDialogActionBase.cs
	MainVM just raises an interaction request - passing ICalibrationService
	
	Make Calibrate method synchronous? Await OnResult event using either awaited TaskCompletionSource or a bit of Rx (http://stackoverflow.com/questions/23254964/iobservablet-totaskt-method-returns-task-awaiting-activation)
		Returns a CalibrationResult object (bool success, string message)

Test calibration:
	Test errored calibrations
	Test successful calibration only fires once
	Make calibration visible above/through keyboard

Remove locked key border style to allow selection animation to show on background?

Simplify settings keyboard access to just: Move & Resize
	Remove 'outer' settings keyboard (keep the icons in case)
		MainWindowTop	System.Double	0
		MainWindowLeft	System.Double	0
		MainWindowHeight	System.Double	400
		MainWindowWidth	System.Double	800

Management (new window accessed with hotkey)
		Visuals:		
		Theme	System.String	/Resources/Themes/Android_Dark.xaml
		FontFamily	System.String	/Resources/Fonts/#Roboto
		FontStretch	System.String	Condensed
		FontWeight	System.String	Regular
		ScratchpadNumberOfLines	System.Int32	2
		ToastNotificationTitleFontSize	System.Int32	25
		ToastNotificationContentFontSize	System.Int32	16
		Complexity setting - Basic/Advanced
		
		Words:		
		Language	JuliusSweetland.ETTA.Enums.Languages	BritishEnglish
		AutoAddSpace	System.Boolean	TRUE
		AutoCapitalise	System.Boolean	TRUE
		MultiKeySelectionMaxDictionaryMatches	System.Int32	40
		
		Sounds:		
		SpeechVoice	System.String	
		SpeechVolume	System.Int32	100
		SpeechRate	System.Int32	0
		InfoSoundFile	System.String	Resources\Sounds\Info1.wav
		SelectionSoundFile	System.String	Resources\Sounds\Selection1.wav
		ErrorSoundFile	System.String	Resources\Sounds\Error1.wav
		MultiKeySelectionCaptureStartSoundFile	System.String	Resources\Sounds\MultiKeyCaptureStart1.wav
		MultiKeySelectionCaptureEndSoundFile	System.String	Resources\Sounds\MultiKeyCaptureEnd1.wav
		
		Pointing & Selecting:		
		PointsSource	JuliusSweetland.ETTA.Enums.PointsSources	MousePosition
		PointsMousePositionSampleInterval	System.TimeSpan	00:00.013
		PointTtl	System.TimeSpan	00:00.150
		KeySelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	KeyboardKeyDownsUps
		PointSelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	Fixations
		SelectionTriggerKeyboardKeyDownUpKey	System.Windows.Forms.Keys	Pause
		SelectionTriggerMouseDownUpButton	System.Windows.Forms.MouseButtons	Left
		KeySelectionTriggerFixationMinPoints	System.Int32	10
		PointSelectionTriggerFixationMinPoints	System.Int32	10
		PointSelectionTriggerFixationRadius	System.Double	50
		KeySelectionTriggerFixationTime	System.TimeSpan	00:01.500
		PointSelectionTriggerFixationTime	System.TimeSpan	00:01.500
		SelectionTriggerStopSignal	JuliusSweetland.ETTA.Enums.TriggerStopSignals	NextLow
		MultiKeySelectionFixationMinDwellTime	System.TimeSpan	00:00.050
		MultiKeySelectionMaxDuration	System.TimeSpan	01:00.000
		
		Dictionary management:
		Add
		Remove

		Other:
		Debug mode (setting) (or command line arg?)

Complexity views - Basic (speaking only, maybe no AddToDictionary) -> Advanced
	- When switching to Basic mode removes everything irrelevent (Publishing, MultiKeyCapturing, AddToDictionary, PublishOnly, Menu, Symbols)
		- Publishing off (which should reset down keys)
		- Multi-key selection off
		- Set Keyboard back to Alpha
		? Leave Sleep and Recalibrate in?

Pause point source when switching keyboards - on unload/load of content of Keyboard host, i.e. when KeyboardHost.Content changes

Profile and optimise, especially keyboard transitions

Refactor any remaining large classes, e.g. MainViewModel

!Release down keys logic seems to release keys which aren't down, e.g. F4 on shutdown!

--------------------------------------------------------------------------------

TO DO?
Add transparency - accessible from keyboard?
Prevent minimising/maximising - must be windowed at all times
Add support for USB (hardware) buttons (to act as triggers)?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes – ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word
Add high contrast theme
Test this product: http://www.cameramouse.org/
Get and test the Tobii EyeX: http://www.tobii.com/en/eye-experience/#.UwMlifl5OkF

Get a certificate (1), sign the release build (2) and package ETTA to install to Program Files directory (3) - required to be get UI Access and stay on top of Metro
	Free (1 year trial?) certificate for Open Source projects; https://www.certum.eu/certum/cert,offer_en_open_source_cs.xml
		http://stackoverflow.com/questions/1177552/code-signing-certificate-for-open-source-projects
	Steps to sign are in file "Certificates and Signing.txt"

NEXT STEPS:

TEST AGGREGATE KEY FIXATION TRIGGER AGAIN

TEST WITH EYE TRIBE - DOES THIS WHOLE THING WORK?! 
	Assuming the user sits approximately 60 cm away (at a distance of 45 - 75 cm).
	Match calibration area with keyboard area, i.e. don't try to use keyboard outside the calibrated area.
	Match calibration background colour to keyboard's average colour.
	Use head rest.
	Is TET more/less accurate at 30fps/60fps?

AggregateFixation trigger is removing older fixation progress as you move on - why?

!Alt + Tab not working - this suggests that it should: http://inputsimulator.codeplex.com/discussions/545723!

Change equality comparisons for floating point types (float, double) back to near-equality (subtract them, Abs the result and check if < tolerance). Some arithmatic may work in Debug where the JIT compiler cannot use the full float range, but fail in Release.

Hot keys/shortcut keys:
	1. Complexity - Basic (speaking only, maybe no AddToDictionary) -> Advanced
		- Hotkey to toggle and store in Settings - e.g. Ctrl+F
		- When switching to Basic mode removes everything irrelevent (Publishing, MultiKeyCapturing, AddToDictionary, PublishOnly, Menu, Symbols)
			- Publishing off (which should reset down keys)
			- Multi-key selection off
			? Leave Sleep and Recalibrate in?

	2. What happens if the user changes something like the points source, but it is not working - no way to change back
		(Factory reset - just delete user settings folder)
		- Hot keys to toggle settings, e.g. position, point source, trigger source, etc.
			!ETTA does not support changing input sources at runtime - restart required - TELL USERS IN POPUP!

	3. Debug setting

	4. Recalibrate

!Release down keys logic seems to release keys which aren't down, e.g. F4 on shutdown!

Add settings
	+ accessible settings - keyboard style
		* include ability to move and resize keyboard
	? normal settings (hotkey window)
	
Theme:		
Theme	System.String	/Resources/Themes/Android_Dark.xaml
FontFamily	System.String	/Resources/Fonts/#Roboto
FontStretch	System.String	Condensed
FontWeight	System.String	Regular
		
Layout:
MainWindowTop	System.Double	0
MainWindowLeft	System.Double	0
MainWindowHeight	System.Double	400
MainWindowWidth	System.Double	800
MainWindowState	System.Windows.WindowState	Normal
ScratchpadNumberOfLines	System.Int32	2
ToastNotificationTitleFontSize	System.Int32	25
ToastNotificationContentFontSize	System.Int32	16
		
Words:		
Language	JuliusSweetland.ETTA.Enums.Languages	BritishEnglish
AutoAddSpace	System.Boolean	TRUE
AutoCapitalise	System.Boolean	TRUE
MultiKeySelectionMaxDictionaryMatches	System.Int32	40
		
Sounds:		
SpeechVoice	System.String	
SpeechVolume	System.Int32	100
SpeechRate	System.Int32	0
InfoSoundFile	System.String	Resources\Sounds\Info1.wav
SelectionSoundFile	System.String	Resources\Sounds\Selection1.wav
ErrorSoundFile	System.String	Resources\Sounds\Error1.wav
MultiKeySelectionCaptureStartSoundFile	System.String	Resources\Sounds\MultiKeyCaptureStart1.wav
MultiKeySelectionCaptureEndSoundFile	System.String	Resources\Sounds\MultiKeyCaptureEnd1.wav
		
Pointing & Selecting:		
PointsSource	JuliusSweetland.ETTA.Enums.PointsSources	MousePosition
PointsMousePositionSampleInterval	System.TimeSpan	00:00.013
PointTtl	System.TimeSpan	00:00.150
KeySelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	KeyboardKeyDownsUps
PointSelectionTriggerSource	JuliusSweetland.ETTA.Enums.TriggerSources	Fixations
SelectionTriggerKeyboardKeyDownUpKey	System.Windows.Forms.Keys	Pause
SelectionTriggerMouseDownUpButton	System.Windows.Forms.MouseButtons	Left
KeySelectionTriggerFixationMinPoints	System.Int32	10
PointSelectionTriggerFixationMinPoints	System.Int32	10
PointSelectionTriggerFixationRadius	System.Double	50
KeySelectionTriggerFixationTime	System.TimeSpan	00:01.500
PointSelectionTriggerFixationTime	System.TimeSpan	00:01.500
SelectionTriggerStopSignal	JuliusSweetland.ETTA.Enums.TriggerStopSignals	NextLow
MultiKeySelectionFixationMinDwellTime	System.TimeSpan	00:00.050
MultiKeySelectionMaxDuration	System.TimeSpan	01:00.000
		
Other:		
Debug	System.Boolean	TRUE - SHORTCUT, RATHER THAN MENU ITEM

Recalibrate functionality

Dictionary management window
	+ Add
	+ Remove
	
Profile and optimise, especially keyboard transitions

Refactor any remaining large classes, e.g. MainViewModel

Package ETTA to install to Program Files directory (required to stay on top)
	Stay on top of everything (including Metro start menu): http://stackoverflow.com/questions/14629406/how-can-i-make-my-own-application-on-top-in-the-start-menu

--------------------------------------------------------------------------------

TO DO?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes – ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word
Add high contrast theme

--------------------------------------------------------------------------------

SMALL THINGS:
!Start up with TheEyeTribe as point source, but not running - displays error correctly, but process doesn't end cleanly and there is a big pause before anything is displayed.
	Delay = trying to Activate?
	Shutdown prevented = need to Deactivate on shutdown? GazeManager.Instance.Deactivate(); Add everything that needs cleaning up to an Rx CompositeDisposable, including TheEyeTribePointService, which could be made disposable to Deactive connection.

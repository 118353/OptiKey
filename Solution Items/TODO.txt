Make some notes before RHN meeting;
	What I want to achieve:
		For this to rival and become a viable alternative to commercial/paid for products.
		Build a community to support it.
		Be able to suggest accompanying hardware (tablet/laptop + eye tracker) for a low cost DIY solution.
	What I think the next steps are:
		Trial & improve.
	How I imagine they could help:
		Offer advice.
		Trial the software and provide feedback.
		Have patients trial the software and provide feedback.
		Regular SDLC involving them trialing each release candidate. Possible joint future?
	Initial questions:
		Does it work?
		Glaring problems/issues?
		What support will I need to offer?
		Obvious next steps?

UiAccess requirements:
	1.Elevated privileges - this prevents debugging so set in Release mode Post-Build/Pre-Publish* only**
	2.Signed assembly (by a trusted certificate) - use the Signing tab on project properties to sign manifests (deployment and application manifests) AND assembly
	3."Secure location" - ??? Test clickonce (is it just a case of FullTrust?)
	4.UiAccess="True" flag - this prevents debugging so set in Release mode Post-Build/Pre-Publish* only**

	Notes:
	Visual Studio can't debug with UiAccess="True". Is there a workaround?
	UiAccess actually works without admin privileges on my laptop, but only when run from Program Files
	Setting requireAdministrator only requires confirmation before starting. It does NOT allow an insecure location to work.
	Click2Speak runs from C:\Users\Julius\AppData\Local\Apps\2.0\51EBCVV8.OV4\4363V1M5.AQ1 and DOES require elevated privileges at startup.
	MSDN article: http://msdn.microsoft.com/en-us/library/windows/desktop/ee671610(v=vs.85).aspx
	* http://stackoverflow.com/questions/3887050/can-visual-studio-post-build-events-be-used-with-clickonce-publishing
	** http://msdn.microsoft.com/en-us/library/ke5z92ks.aspx (How to change manifest in post-build event)

SIGN ASSEMBLY:
	Download my cert here (store in solution folder, but EXCLUDE FROM GITHUB): https://cservices.certum.pl/muc-customer/customerCertificate/list
	Set up a post build event to sign the assembly
		http://stackoverflow.com/questions/19879812/signing-exe-with-cer-file-what-is-my-certificates-name-that-signtool-exe-is
		Certmgr.msc

Publish as ClickOnce
	http://elbruno.com/2013/06/01/azure-howto-publish-a-clickonce-application-using-and-azure-website/
	Investigate certificate signing the application and deployment manifests for uiAccess
	Investigate strong naming the application and deployment manifests as a requirement of ClickOnce deployment
		http://msdn.microsoft.com/en-us/library/h4fa028b(en-US,VS.80).aspx

Profile and optimise, especially keyboard transitions
	Wrap parallel word match into another thread
	http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/28/new-cpu-usage-tool-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx
	http://blogs.msdn.com/b/visualstudio/archive/2014/06/12/new-memory-usage-tool-for-wpf-and-win32-applications.aspx
	
Refactor any remaining large classes, e.g. MainViewModel
	Create new 'InputBroker'/'InputHandler'/'InputRouter' class which takes the view model, input service, outputservice, etc and coordinates the response

Buy OptiKey.com

Rename everything in project to OptiKey:
	Namespaces
	Anything else in project
	Add assembly info (project properties)
	GitHub project
	Folder structure

Create gmail account for OptiKey

Create skeleton website (on Azure?)

Add details on how to provide feedback in README.md file
	How to turn on debugging mode and find logs to include in email

Sort out sizing/layout of suggestions
	Phrases should wrap
	Individually size? OR Size consistently, but wrap letters (breaking words) so as large as possible

Preview settings in management console

!Release down keys logic seems to release keys which aren't down, e.g. F4 on shutdown!

--------------------------------------------------------------------------------

TO DO?
Add support for USB (hardware) buttons (to act as triggers)?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes â€“ ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word
Add high contrast theme
Test this product: http://www.cameramouse.org/
Get and test the Tobii EyeX: http://www.tobii.com/en/eye-experience/#.UwMlifl5OkF
No position input possible - automatically cycle through groups of keys, then keys in group: 
	Keyboards could define ordered set of KeyValues; the key "groups"
	New SelectionMode = KeyGroups - this then changes to PositionSource to a source which automatically loops through the current keyboard's groups.
	Position source can output more than one current point: CurrentKey would become a set (allowing the highlighting of a group of keys)
	Selection (of a set of KeyValues) when SelectionMode = KeyGroups does not produce a SelectionResult, but instead disables all keys not in the group (not explicitly, but instead based on a property, e.g. CurrentKeyGroup). SelectionMode then changes to Key.
	In Key mode the position source could iterate through all enabled keys in the key map (which should be the selected group of keys).
		Selection => normal key selection and reset mode back to KeyGroups.
		? If no selection in X iterations through the keys then output a special selection, e.g. a null selection (the trigger can watch the position source, like the fixation triggers.
	Each key group should contain a 'back' key to return from group selection?
Add support for T9 style selection; either individual keys, or multi key select?
Consider releasing a version which does not require admin privileges



!!! If DropBox creates another conflicted copy: http://stackoverflow.com/questions/12773488/git-fatal-reference-has-invalid-format-refs-heads-master

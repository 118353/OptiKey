Why I cannot install on Windows 8, but fine on Windows 7.

What are the prerequisites for an application which targets .net 4.5?
	Add minimum windows version to installer?
	http://msdn.microsoft.com/en-us/library/8z6watww%28v=vs.110%29.aspx
		Vista SP2, Windows 7 SP1, Windows 8, Windows 8.1
		
Can I reliably detect the presence of any requirements? 
Can I supply people with a link to install the requirements if missing (but allow them to continue with the installation anyway)? 


Search for any remaining references to ETTA

Signing:
	Get certificate working
	Sign assembly when deploying
	Sign installer when deploying

Add dependency on latest .Net Framework 4.5 to Inno setup
	http://stackoverflow.com/questions/20752882/how-can-i-install-net-framework-as-a-prerequisite-using-innosetup
	Where to find the reg key: http://msdn.microsoft.com/en-us/library/hh925568(v=vs.110).aspx#net_b
		Software\Microsoft\NET Framework Setup\NDP\Release >= 378389

Change icons:
	Publish - and rename to SimulateKeyStrokes
	MultiKeySelection

OptiKey.org/OptiKey.co.uk
	Change links at top to "Latest Version" and "Source on GitHub"
	Add screenshot(s)
	Add page: Usage Guide (including changing settings) ("Usage", "Guides", "How To", "Instructions", "Features", "Help", "Usage Guide")
	Add page: Troubleshooting
	Add: How to contribute
	Add: pre-requisites
	Jekyll: https://help.github.com/articles/using-jekyll-with-pages/
	Get optikey.org/.co.uk listed on Google

Splash screen on first run - tell user about Alt+M

Automatic updates:
	Manually check latest GitHub release version
		Display notification if update available - they can update manually
		Add setting to disable checks
	http://wyday.com/wybuild/
	Do I need a proper website to support this? If so then look at Azure again.

Profile and optimise, especially keyboard transitions
	http://blogs.msdn.com/b/visualstudioalm/archive/2014/02/28/new-cpu-usage-tool-in-the-performance-and-diagnostics-hub-in-visual-studio-2013.aspx
	http://blogs.msdn.com/b/visualstudio/archive/2014/06/12/new-memory-usage-tool-for-wpf-and-win32-applications.aspx
	
Refactor any remaining large classes, e.g. MainViewModel
	Create new 'InputBroker'/'InputHandler'/'InputRouter' class which takes the view model, input service, outputservice, etc and coordinates the response

Sort out sizing/layout of suggestions
	Phrases should wrap
	Individually size? OR Size consistently, but wrap letters (breaking words) so as large as possible

Preview settings in management console

!Release down keys logic seems to release keys which aren't down, e.g. F4 on shutdown!

--------------------------------------------------------------------------------

POSSIBLE THINGS TO DO:
Add support for USB (hardware) buttons (to act as triggers)?
Store usage statistics in a case sensitive way? Would need to keep track of originally cased entries (incl. suggestions). Does this have any benefit? Think about whole advantage of storing usage statistics. 
Character codes â€“ ALT on/lock, then numbers, then ALT off
Auto complete words
	+ auto correct words
Predict next word
Add high contrast theme
Get and test the Tobii EyeX: http://www.tobii.com/en/eye-experience/#.UwMlifl5OkF
No position input possible - automatically cycle through groups of keys, then keys in group: 
	Keyboards could define ordered set of KeyValues; the key "groups"
	New SelectionMode = KeyGroups - this then changes to PositionSource to a source which automatically loops through the current keyboard's groups.
	Position source can output more than one current point: CurrentKey would become a set (allowing the highlighting of a group of keys)
	Selection (of a set of KeyValues) when SelectionMode = KeyGroups does not produce a SelectionResult, but instead disables all keys not in the group (not explicitly, but instead based on a property, e.g. CurrentKeyGroup). SelectionMode then changes to Key.
	In Key mode the position source could iterate through all enabled keys in the key map (which should be the selected group of keys).
		Selection => normal key selection and reset mode back to KeyGroups.
		? If no selection in X iterations through the keys then output a special selection, e.g. a null selection (the trigger can watch the position source, like the fixation triggers.
	Each key group should contain a 'back' key to return from group selection?
Add support for T9 style selection; either individual keys, or multi key select?
Prevent minimising, or at least ask before allowing it?

--------------------------------------------------------------------------------

!!! If DropBox creates another conflicted copy: http://stackoverflow.com/questions/12773488/git-fatal-reference-has-invalid-format-refs-heads-master
